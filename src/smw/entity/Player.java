package smw.entity;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyListener;
import java.awt.image.ImageObserver;

import smw.Game;
import smw.gfx.Palette.ColorScheme;
import smw.gfx.Sprite;
import smw.ui.PlayerControl;

public class Player extends Rectangle{
	/**
	 * Autogenerated!
	 */
	private static final long serialVersionUID = -4197702383138211374L;
	
	Sprite  sprite;
	PlayerPhysics physics;
	PlayerControl playerControl;
	final int playerIndex;
	
	public Player(PlayerControl playerControl, int playerIndex){	
		physics = new PlayerPhysics(playerControl);
		sprite  = new Sprite();
		this.playerIndex = playerIndex;
	}
	
	void setBounds(int newX, int newY){
	  //TODO might be a faster way (width/height never change)
		setBounds(newX, newY, Sprite.IMAGE_WIDTH, Sprite.IMAGE_HEIGHT);			
	}
	
	public Image getImage(){
		return sprite.getImage();
	}
	
	public void init(int newX, int newY, String image){
		setBounds(newX, newY);
		sprite.init(image, ColorScheme.YELLOW);
	}
	
	/*** This method is to get the state ready to move ***/
	public void prepareToMove(){
		physics.update();
	}
	
	public void move(Player[] players){	
		float dx = physics.getVelocityX();
		float dy = physics.getVelocityY();
		
		sprite.update(dx, dy, physics.isJumping, physics.isSkidding);
		int newX, newY = 0;
		
		newX = (int) (x + dx);
		newY = (int) (y + dy);
		
		// TODO - RPG - this is awful, but at least we can detect the floor sort of	
		// Need to add detection for X axis
		// Probably need to check each tile around the players new point like Mitch did with "intersects"
		if (Game.level.getTileType(newX, newY + 32) == 1) {
		  newY = y;
		  physics.collideWithFloor();
		}
			
		//This is definitely not right... but its kinda cool that it sort of works
		for(Player p : players){
			if(p.playerIndex != playerIndex){
				if(p.intersects(newX, y, Sprite.IMAGE_WIDTH, Sprite.IMAGE_HEIGHT)){
					newX = x;
					break;
				}
			}
		}
		
		for(Player p : players){
			if(p.playerIndex != playerIndex){
				if(p.intersects(x, newY, Sprite.IMAGE_WIDTH, Sprite.IMAGE_HEIGHT)){
					physics.collideWithFloor();
					newY = y;
					break;
				}
			}
		}

		setBounds(newX, newY);					
	}
	
	public void draw(Graphics2D graphics, ImageObserver observer){
		graphics.drawImage(sprite.getImage(), x, y, observer);
	}

	public final KeyListener getControls() {
	  return physics.playerControl;
  }
}
